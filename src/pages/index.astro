---
import Layout from '../layouts/Layout.astro';
import CodeBlock from '../components/CodeBlock.astro';

const features = [
  {
    title: "Basics",
    description: "Master C++ fundamentals, syntax, and core concepts",
    icon: "üìö",
    path: "/basics",
    color: "from-teal-500 to-emerald-500"
  },
  {
    title: "Data Structures",
    description: "Learn essential data structures and their implementations",
    icon: "üîç",
    path: "/dsa",
    color: "from-blue-500 to-cyan-500"
  },
  {
    title: "Algorithms",
    description: "Explore popular algorithms and problem-solving techniques",
    icon: "‚ö°",
    path: "/algorithms",
    color: "from-purple-500 to-pink-500"
  }
];
---

<Layout title="C++ Tutorials - Learn C++ Programming">
  <main class="pt-24 px-6 pb-12">
    <div class="max-w-7xl mx-auto">
      <!-- Hero Section -->
      <div class="text-center mb-16 animate-fade-in">
        <h1 class="text-7xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-teal-400 to-blue-500 mb-6 tracking-tight">
          Master C++ Programming
        </h1>
        <p class="text-xl text-gray-300 max-w-2xl mx-auto leading-relaxed">
          Interactive tutorials, practical examples, and hands-on coding exercises to help you master C++ programming from scratch.
        </p>
        <div class="mt-8 flex justify-center space-x-4">
          <a href="/editor" class="glassmorphic-button primary">
            Get Started
            <span class="ml-2">‚Üí</span>
          </a>
          <a href="/practice" class="glassmorphic-button secondary">
            Try Examples
          </a>
        </div>
      </div>

      <!-- Feature Cards -->
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16">
        {features.map(feature => (
          <div class="feature-card group">
            <div class={`icon-wrapper bg-gradient-to-br ${feature.color}`}>
              <span class="text-2xl">{feature.icon}</span>
            </div>
            <h2 class="text-2xl font-bold text-white mb-4 group-hover:text-teal-300 transition-colors">
              {feature.title}
            </h2>
            <p class="text-gray-300 mb-6">{feature.description}</p>
            <a href={feature.path} class="card-link">
              Learn More
              <svg class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M5 12h14M12 5l7 7-7 7"/>
              </svg>
            </a>
          </div>
        ))}
      </div>

      <!-- Code Example -->
      <div class="code-section">
        <div class="flex justify-between items-center mb-6">
          <h2 class="text-3xl font-bold text-white">Quick Example</h2>
          <div class="flex space-x-2">
            <span class="w-3 h-3 rounded-full bg-red-500"></span>
            <span class="w-3 h-3 rounded-full bg-yellow-500"></span>
            <span class="w-3 h-3 rounded-full bg-green-500"></span>
          </div>
        </div>
        <CodeBlock 
          code={`#include <iostream>

int main() {
    std::cout << "Hello, C++!" << std::endl;
    return 0;
}`} 
          lang="cpp" 
        />
        <div class="mt-4 flex justify-end">
          <button class="run-button">
            <span class="mr-2">‚ñ∂</span>
            Run Code
          </button>
        </div>
      </div>

      <!-- Newsletter Section -->
      <div class="newsletter-section">
        <h2 class="text-2xl font-bold text-white mb-4">Stay Updated</h2>
        <p class="text-gray-300 mb-6">Get the latest C++ tutorials and tips delivered to your inbox.</p>
        <form class="flex gap-4">
          <input 
            type="email" 
            placeholder="Enter your email" 
            class="flex-1 glassmorphic-input"
          />
          <button type="submit" class="glassmorphic-button primary">
            Subscribe
          </button>
        </form>
      </div>
    </div>
  </main>
</Layout>

<style>
  .animate-fade-in {
    animation: fadeIn 0.8s ease-out;
  }

  .feature-card {
    @apply backdrop-blur-lg bg-white/5 border border-white/10 rounded-xl p-6
           hover:bg-white/10 transition-all duration-300
           hover:border-teal-500/30 hover:shadow-lg hover:shadow-teal-500/10;
  }

  .icon-wrapper {
    @apply w-12 h-12 rounded-lg flex items-center justify-center text-white mb-4
           shadow-lg transition-transform group-hover:scale-110;
  }

  .card-link {
    @apply inline-flex items-center text-teal-400 hover:text-teal-300 
           transition-colors font-medium;
  }

  .code-section {
    @apply backdrop-blur-lg bg-black/30 border border-white/10 rounded-xl p-8
           hover:border-teal-500/30 transition-all duration-300
           hover:shadow-lg hover:shadow-teal-500/10;
  }

  .run-button {
    @apply px-6 py-2 bg-gradient-to-r from-teal-500 to-emerald-500
           text-white rounded-lg flex items-center
           hover:from-teal-400 hover:to-emerald-400 transition-all
           shadow-lg shadow-teal-500/20 hover:shadow-teal-500/40;
  }

  .newsletter-section {
    @apply mt-16 backdrop-blur-lg bg-white/5 border border-white/10 rounded-xl p-8
           hover:bg-white/10 transition-all duration-300;
  }

  .glassmorphic-input {
    @apply bg-white/5 border border-white/10 rounded-lg px-4 py-2 text-white
           focus:outline-none focus:border-teal-500/50 focus:ring-2 focus:ring-teal-500/20
           placeholder-gray-400;
  }

  .glassmorphic-button {
    @apply px-6 py-2 rounded-lg flex items-center transition-all duration-300
           hover:shadow-lg text-white font-medium;
  }

  .glassmorphic-button.primary {
    @apply bg-gradient-to-r from-teal-500 to-emerald-500
           hover:from-teal-400 hover:to-emerald-400
           shadow-teal-500/20 hover:shadow-teal-500/40;
  }

  .glassmorphic-button.secondary {
    @apply bg-white/10 border border-white/20
           hover:bg-white/20 hover:border-white/30
           shadow-white/10 hover:shadow-white/20;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }
</style>